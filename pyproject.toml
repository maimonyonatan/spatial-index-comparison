[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "zm-rtree-research"
version = "0.1.0"
description = "Research prototype for comparing R-Tree vs. Learned ZM Index for spatial queries"
authors = [
    {name = "Research Team", email = "research@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core spatial libraries
    "rtree>=1.0.1",
    "geopandas>=0.14.0",
    "shapely>=2.0.2",
    # Machine Learning
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "numpy>=1.24.0",
    # Data processing
    "pandas>=2.0.0",
    "pyarrow>=12.0.0",
    # GUI and Visualization
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "folium>=0.14.0",
    "streamlit-folium>=0.15.0",
    # Performance monitoring
    "psutil>=5.9.0",
    "memory-profiler>=0.61.0",
    # Utilities
    "tqdm>=4.65.0",
    "click>=8.1.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/maimonyonatan/spatial-index-comparison"
Repository = "https://github.com/maimonyonatan/spatial-index-comparison"
Issues = "https://github.com/maimonyonatan/spatial-index-comparison/issues"

[project.scripts]
zm-research = "zm_rtree_research.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/zm_rtree_research"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["zm_rtree_research"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rtree.*",
    "folium.*",
    "streamlit_folium.*",
    "plotly.*",
    "geopandas.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
